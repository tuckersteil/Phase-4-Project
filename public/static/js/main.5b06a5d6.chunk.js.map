{"version":3,"sources":["LoginForm.js","SignUpForm.js","Login.js","NavBar.js","CourseList.js","Confirm.js","TeeTimes.js","Course.js","MyTeeTimes.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","onLogin","useState","username","setUsername","password","setPassword","errors","setErrors","isLoading","setIsLoading","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","ok","json","user","err","htmlFor","type","id","autoComplete","value","placeholder","onChange","target","variant","color","class","map","className","SignUpForm","passwordConfirmation","setPasswordConfirmation","password_confirmation","Login","showLogin","setShowLogin","onClick","NavBar","setUser","style","display","marginLeft","marginRight","width","to","CourseList","courses","setCourses","useEffect","course","src","img","name","location","par","holes","length","Confirm","teetime","price","players","navigate","useNavigate","date","time","finalTeeData","course_id","status","TeeTimes","bookTime","useParams","allTeeTimes","setAllTeeTimes","Date","setDate","clicked","setClicked","today","toLocaleString","split","toDateString","submitTee","setSubmitTee","handleChange","event","console","log","data","filter","calDate","parseInt","teeTime","user_id","Course","courseInfo","setCourseInfo","setTeeTime","description","MyTeeTimes","teeTimes","setTeeTimes","unpostTime","repostTime","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5b06a5d6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction LoginForm({ onLogin }){\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setIsLoading(true);\n        fetch(\"/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ username, password }),\n        }).then((r) => {\n          setIsLoading(false);\n          if (r.ok) {\n            r.json().then((user) => onLogin(user));\n          } else {\n            r.json().then((err) => setErrors(err.errors));\n          }\n        });\n      }\n    return (\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"username\" ></label>\n                <input\n                type=\"text\"\n                 id=\"username\"\n                autoComplete=\"off\"\n                value={username}\n                placeholder=\"Username\"\n                onChange={(e) => setUsername(e.target.value)}\n            />\n            <label htmlFor=\"password\"></label>\n                <input\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={password}\n                placeholder=\"Password\"\n                onChange={(e) => setPassword(e.target.value)}\n            />\n            <button variant=\"fill\" color=\"primary\" type=\"submit\" class=\"btn btn-primary btn-block btn-large\">\n                {isLoading ? \"Loading...\" : \"Login\"}\n            </button>\n            <div>\n                {errors.map((err) => (\n                    <p className=\"whitey\" key={err}>{err}</p>\n                ))}\n            </div>\n\n        </form>\n    )\n}\nexport default LoginForm","import React, { useState } from \"react\";\n\nfunction SignUpForm({ onLogin }){\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        setErrors([]);\n        setIsLoading(true);\n        fetch(\"/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            username,\n            password,\n            password_confirmation: passwordConfirmation\n          }),\n        }).then((r) => {\n          setIsLoading(false);\n          if (r.ok) {\n            r.json().then((user) => onLogin(user));\n          } else {\n            r.json().then((err) => setErrors(err.errors));\n          }\n        });\n      }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"username\"></label>\n                <input \n                type=\"text\"\n                id=\"username\"\n                autoComplete=\"off\"\n                value={username}\n                placeholder=\"Username\"\n                onChange={(e) => setUsername(e.target.value)}\n                />\n            <label htmlFor=\"password\"></label>\n                <input \n                type=\"password\"\n                id=\"password\"\n                value={password}\n                placeholder=\"Password\"\n                onChange={(e) => setPassword(e.target.value)}\n                autoComplete=\"current-password\"\n                />\n            <label htmlFor=\"password\"></label>\n                <input \n                type=\"password\"\n                id=\"password_confirmation\"\n                placeholder=\"Password Confirmation\"\n                value={passwordConfirmation}\n                onChange={(e) => setPasswordConfirmation(e.target.value)}\n                autoComplete=\"current-password\"\n                />\n            <button variant=\"fill\" color=\"primary\" type=\"submit\" class=\"btn btn-primary btn-block btn-large\">\n                {isLoading ? \"Loading...\" : \"Sign Up\"}\n            </button>\n            <div>\n                {errors.map((err) => (\n                    <p key={err} className=\"whitey\">{err}</p>\n                ))}\n            </div>\n        </form>\n    )\n}\nexport default SignUpForm;","import { useState } from \"react\";\nimport LoginForm from \"./LoginForm\";\nimport SignUpForm from \"./SignUpForm\";\nfunction Login({onLogin}){\n    const [showLogin, setShowLogin] = useState(true);\n\n   \n    return (\n        <div className=\"login \">\n            <h1 >Last Minute Tee Times</h1>\n            {showLogin ? (\n            <>\n                <LoginForm onLogin={onLogin}/>\n                <p>-------------------------------</p>\n                <p className=\"whitey\">\n                    Don't have an account? &nbsp;\n                    <button onClick={() => setShowLogin(false)} class=\"btn btn-primary btn-block btn-large\">\n                        Sign Up\n                    </button>\n                </p>\n            </>\n            ) : (\n            <>\n                <SignUpForm onLogin={onLogin} />\n                <p className=\"whitey\">----------------------------------------------------------</p>\n                <p className=\"whitey\">\n                    Already have an account? &nbsp;\n                    <button color=\"secondary\" onClick={() => setShowLogin(true)} class=\"btn btn-primary btn-block btn-large\">\n                        Log In\n                    </button>\n                </p>\n            </> \n            )}\n        </div>\n    )\n}\nexport default Login;","import { NavLink } from \"react-router-dom\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction NavBar({ user, setUser }) {\n    function handleLogoutClick() {\n        fetch(\"/logout\", { method: \"DELETE\" }).then((r) => {\n          if (r.ok) {\n            setUser(null);\n          }\n        });\n      }\n\n      const linkStyles = {\n        display: \"inline-block\",\n        marginLeft: \"15rem\",\n        marginRight: \"auto\",\n        width: \"55%\",\n      }\n\n      \n     \n\nreturn (\n    <div >\n        <h1 style={linkStyles}>\n            <Link to='/' className=\"sizey\">Last Minute Tee Times</Link>\n        </h1>\n        <span className=\"navB\">\n          <button className=\"navc\"> \n            <Link to='/myteetimes' >My Tee-times</Link>\n          </button>\n          <NavLink to=\"/\">\n            <button className=\"navB\" variant=\"outline\"  onClick={handleLogoutClick}>Logout</button>\n          </NavLink>\n          \n        </span>\n        \n        \n    \n    </div>\n)\n}\nexport default NavBar;","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nfunction CourseList(){\n    const [courses, setCourses] = useState([]);\n    \n    useEffect(() => {\n        fetch(\"/courses\")\n        .then((r)=> r.json())\n        .then((courses)=> setCourses(courses));\n    }, []);\n\n\n    return (\n        <section className=\"courses\">\n            {courses.map((course) => (\n                <Link className=\"course\" key={course.id} to={`/course/${course.id}`} >\n                    <picture className=\"thumbnail\">\n                        <img src={course.img}/>\n                    </picture>\n\n                    <div className=\"card-content\">\n                        <h2 className=\"category category__03\">{course.name}:</h2>\n                    </div>\n\n                    <footer>\n                        <div className=\"post-meta\">\n                            <strong>{course.location}</strong>\n                            <span className=\"comments\">(Par: {course.par}),</span>\n                            <span className=\"comments\">(Holes: {course.holes}),</span>\n                            <span className=\"comments\">(length: {course.length})</span>\n                        </div>\n                    </footer>               \n                   \n                </Link>\n            ))}\n        </section>\n    )\n}\nexport default CourseList;","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nfunction Confirm({teetime}){\nconst price = (teetime.players * teetime.price)\nconst navigate = useNavigate();\nconst [errors, setErrors] = useState([]);\nconst [isLoading, setIsLoading] = useState(false);\n\nfunction postAndDelete(){\n    const finalTeeData  = {\n        players: teetime.players,\n        price: teetime.price,\n        holes: teetime.holes,\n        time: teetime.time,\n        date: teetime.date,\n        course_id: teetime.course_id,\n        status: \"Booked\"\n    }\n    setIsLoading(true);\n    fetch('/teetimes', {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(finalTeeData)\n    })\n    .then((r) => {\n        if (r.ok) {\n            nowDelete()\n        } else {\n          r.json().then((err) => setErrors(err.errors));\n        }\n      });     \n    }\n\n    function nowDelete(){\n        fetch(`/teetimes/${teetime.id}`, {\n            method: \"DELETE\",\n          })\n          navigate(\"/myteetimes\")\n    }\n\n    return (\n        <div className=\"yay\">   \n                <span >\n                    <h1>CONFIRM BOOKING:</h1>\n                    <span><strong>Date:</strong> {teetime.date}</span>\n                    <span><strong>Time:</strong> {teetime.time}</span>\n                    <span><strong>Players:</strong> {teetime.players}</span>\n                    <span><strong>Holes:</strong> {teetime.holes}</span>\n                    <span><strong>Price:</strong> ${teetime.price}</span>\n                    <h3>TOTAL: Price(${teetime.price}) x Players:({teetime.players}) = ${price}</h3> \n\n                    <button onClick={postAndDelete}> {isLoading ? \"Loading...\" : \"Book Tee Time\"}</button>\n\n                    <p></p>\n                </span>\n        </div>\n\n    )\n}\nexport default Confirm\n","import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport Calendar from \"react-calendar\"\n\nfunction TeeTimes({user, bookTime}){\n    let { id } = useParams();\n    const [errors, setErrors] = useState([]);\n    const [allTeeTimes, setAllTeeTimes] = useState([]);\n    const [date, setDate] = useState(new Date());\n    const [clicked, setClicked] = useState(false)\n    let today = date.toLocaleString().split(\",\")[0] \n    let time = date.toDateString()\n    const [submitTee, setSubmitTee] = useState({\n        players: '',\n        price: '',\n        holes: '',\n        time: ''\n      })\n    console.log(errors)\n\n    useEffect(() => {\n        fetch(`/teetimes/${id}`).then((r) => {\n          if (r.ok) {\n            r.json().then((data) => \n            setAllTeeTimes(data.filter((teetime)=>  teetime.date === today && teetime.status === \"Posted\" )));\n          }\n        });\n      }, [date]);\n\n      function onChange(calDate){\n        setDate(calDate)\n      }\n      \n    function handleClick(){\n        setClicked(!clicked)\n    }\n\n    function handleSubmit(event){\n        event.preventDefault()\n        const finalTeeData = {\n            players: parseInt(submitTee.players),\n            price: parseInt(submitTee.price),\n            holes: parseInt(submitTee.holes),\n            time: submitTee.time,\n            date: today,\n            course_id: parseInt(id),\n            status: \"Posted\"\n        }\n        console.log(finalTeeData)\n        fetch('/teetimes', {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(finalTeeData)\n        })\n        .then((r) => {\n            // setClicked(false);\n            if (r.ok) {\n                r.json().then((teeTime) => setAllTeeTimes([...allTeeTimes, teeTime]), setSubmitTee({ players: '',\n                price: '',\n                holes: '',\n                time: ''}))\n            } else {\n                r.json().then((err) => setErrors(err.errors));\n            }\n        })\n    }\nconsole.log(errors)\n// }).then((r) => {\n//     setIsLoading(false);\n//     if (r.ok) {\n//       r.json().then((user) => onLogin(user));\n//     } else {\n//       r.json().then((err) => setErrors(err.errors));\n//     }\n//   });\n\n// .then((r) => r.json())\n// .then((teeTime) => \n// setAllTeeTimes([...allTeeTimes, teeTime]), setClicked(false), setSubmitTee({ players: '',\n// price: '',\n// holes: '',\n// time: ''}))\n\n\n    function handleChange(event){\n        event.preventDefault()\n        setSubmitTee({\n          ...submitTee, \n          [event.target.name]: event.target.value\n        })\n      }\n\n      function handleBook(teeTime){\n       bookTime(teeTime)\n      }\n\n    return (\n    <div className=\"white\"> <strong>Showing Tee Times for:</strong> {time}\n        <section className=\"coursess\">\n            <Calendar onChange={onChange} value={date} className=\"react-calendar\"/>\n            <h1 className=\"posty\">Post a Tee Time:\n                <p></p>\n                <p></p>\n                <button className=\"postyy\" onClick={handleClick}>Click Here</button>\n            </h1>\n            {clicked ? (\n                <div>\n            <form onSubmit={handleSubmit}>\n                <label> Players: (must be 1 to 4)<br/>\n                    <input\n                    type=\"text\"\n                    name=\"players\"\n                    value={submitTee.players}\n                    onChange={handleChange}>\n                    </input>\n                </label>\n                <br/>\n                <label> Price: <br/>\n                    <input\n                    type=\"text\"\n                    name=\"price\"\n                    value={submitTee.price}\n                    onChange={handleChange}>\n                    </input>\n                </label>\n                <br/>\n                <label> Holes: <br/>\n                    <input\n                    type=\"text\"\n                    name=\"holes\"\n                    value={submitTee.holes}\n                    onChange={handleChange}>\n                    </input>\n                </label>\n                <br/>\n                <label> Time: <br/>\n                    <input\n                    type=\"text\"\n                    name=\"time\"\n                    value={submitTee.time}\n                    onChange={handleChange}>\n                    </input>\n                </label>\n                <br/>\n                <label> Date: {today} </label>\n                <br/>\n                <button type=\"submit\">Submit Tee Time</button>\n            </form>\n            {errors.map((err) => (\n                    <p key={err} >{err}</p>\n                ))}\n            </div>\n            ) : allTeeTimes.map((teetime) => (teetime.user_id === user.id ?\n                (<section className=\"gray\" key={teetime.id}>\n                    <div className=\"card-content\">\n                        <h2 className=\"categoryy category__03\">{teetime.time}:</h2>\n                    </div>\n                    <p className=\"rojo\">This Time Belongs to you</p>\n                    <h1 className=\"categoryyy\">${teetime.price}</h1>\n                    <footer className=\"size\">\n                        <span>Player: ({teetime.players})</span> \n                        <p></p> \n                        <span>Holes: ({teetime.holes})</span>\n                        <p></p>\n                    </footer>\n\n                </section>) : (\n                    <section className=\"gray\" key={teetime.id}>\n                    <div className=\"card-content\">\n                        <h2 className=\"categoryy category__03\">{teetime.time}:</h2>\n                    </div>\n                    <h1 className=\"categoryyy\">${teetime.price}</h1>\n                    <footer className=\"size\">\n                        <span>Player: ({teetime.players})</span> \n                        <p></p> \n                        <span>Holes: ({teetime.holes})</span>\n                        <p></p>\n                        <button onClick={ (e) => handleBook(teetime)}>Book Now</button>\n                    </footer>\n\n                </section>\n                )\n            ))}\n        </section>\n    </div>\n     )\n}\nexport default TeeTimes\n\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Confirm from \"./Confirm\";\nimport TeeTimes from \"./TeeTimes\";\nfunction Course({user}){\n    const [courseInfo, setCourseInfo] = useState([]);\n    const [clicked, setClicked] = useState(true)\n    const [teeTime, setTeeTime] = useState([]);\n    let { id } = useParams();\n   console.log(user)\n\n    useEffect(() => {\n        fetch(`/courses/${id}`).then((r) => {\n          if (r.ok) {\n            r.json().then((data) => setCourseInfo(data));\n          }\n        });\n      }, [id]);\n\n      function bookTime(time){\n        setTeeTime(time)\n        setClicked(false)\n      }\n\n\n    return (\n        <div className=\"white\">\n            <div  className=\"numeral\" key={courseInfo.id} >\n                <picture className=\"new-thumb\">\n                    <img src={courseInfo.img}/>\n                </picture>\n\n                <div className=\"card-content-new\">\n                    <h2 className=\"category-new category__03\">{courseInfo.name}:</h2>\n                </div>\n\n                <footer>\n                    <div className=\"post-meta\">\n                        <strong className=\"comments-new\">{courseInfo.location}--</strong>\n                        <span className=\"comments-new\">(Par: {courseInfo.par}),</span>\n                        <span className=\"comments-new\">(Holes: {courseInfo.holes}),</span>\n                        <span className=\"comments-new\">(length: {courseInfo.length})</span>\n                    </div>\n                </footer>      \n\n                <strong className=\"comments-new\">Description: </strong> {courseInfo.description}     \n            </div>\n            <p></p>\n            {clicked ? (\n                <TeeTimes user={user} bookTime={bookTime}/>\n            ):(\n                <Confirm teetime={teeTime} />\n            )}\n            \n        </div>\n\n        \n    )\n}\nexport default Course;","import React, { useEffect, useState } from \"react\";\n\nfunction MyTeeTimes(){\n    const [teeTimes, setTeeTimes]= useState([])\n\nuseEffect(() => {\n        fetch(\"/users/time\")\n            .then((r)=> r.json())\n            .then((data) => setTeeTimes(data))\n}, [])\n\nfunction unpostTime(teetime){\n    console.log(teetime.id)\n    fetch(`/teetimes/${teetime.id}`, {\n        method: \"DELETE\",\n      })\n      .then((r)=> r.json())  \n      .then((data)=>  setTeeTimes(data))\n}\n\nfunction repostTime(teetime){\n    console.log(teetime)\n    fetch(`/teetimes/${teetime.id}`, {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({status: \"Posted\"})\n    })\n    .then((r)=> r.json())  \n    .then((data)=>  setTeeTimes(data))\n}\n\n\n    return(\n    <div className=\"white\">\n        <section className=\"coursess white\">\n            <h1>Posted Tee Times:</h1>\n            {teeTimes.map((teetime) => (teetime.status === \"Posted\"?\n            (<section className=\"gray\" key={teetime.id}>\n                <div className=\"card-content\">\n                    <h2 className=\"categoryy category__03\">{teetime.time}:</h2>\n                </div>\n     \n                <h1 className=\"categoryyy\">${teetime.price}</h1>\n             \n                <footer className=\"size\">\n                    <span>Player: ({teetime.players})</span> \n                    <p></p> \n                    <span>Holes: ({teetime.holes})</span>\n                    <p></p>\n                    <span>Date: ({teetime.date})</span> \n                    <p></p>\n                    <span>Course: ({teetime.course.name})</span>\n                    <p></p>\n                    <button onClick={(e) => unpostTime(teetime)}>Unpost Tee Time</button>\n                </footer>\n            </section>\n            )\n            :\n            (null)))}\n        </section>\n\n        <p></p>\n\n        <section className=\"coursess white\">\n            <h1>Booked Tee Times:</h1>\n            {teeTimes.map((teetime) => (teetime.status === \"Booked\"?\n            (<section className=\"gray\" key={teetime.id}>\n                <div className=\"card-content\">\n                    <h2 className=\"categoryy category__03\">{teetime.time}:</h2>\n                </div>\n     \n                <h1 className=\"categoryyy\">${teetime.price}</h1>\n             \n                <footer className=\"size\">\n                    <span>Player: ({teetime.players})</span> \n                    <p></p> \n                    <span>Holes: ({teetime.holes})</span>\n                    <p></p>\n                    <span>Date: ({teetime.date})</span> \n                    <p></p>\n                    <span>Course: ({teetime.course.name})</span>\n                    <p></p>\n                 <button onClick={(e) => repostTime(teetime)}>Repost Tee Time</button>\n                </footer>\n            </section>\n            )\n            :\n            (null)))}\n        </section>\n    </div>\n    )\n}\nexport default MyTeeTimes;","import Login from \"./Login\";\nimport React, { useEffect, useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\"\nimport CourseList from \"./CourseList\";\nimport Course from \"./Course\";\nimport PracticeCss from \"./Confirm\";\n\nimport MyTeeTimes from \"./MyTeeTimes\";\nfunction App() {\n  const [user, setUser] = useState(null);\n\n\n  useEffect(() => {\n    fetch(\"/me\").then((r) => {\n      if (r.ok) {\n        r.json().then((user) => setUser(user));\n      }\n    });\n  }, []);\n  if (!user) return <Login onLogin={setUser} />;\n  \n  return (\n    <div className=\"colored\">\n      <NavBar user={user} setUser={setUser}/>\n      <Routes>\n        <Route path=\"/\" element={<CourseList />}/>\n        <Route path=\"/course/:id\" element={<Course user={user}/>}/>\n        <Route path =\"/myteetimes\" element={<MyTeeTimes />} />\n      </Routes>\n      \n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from \"react-router-dom\"\n\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}